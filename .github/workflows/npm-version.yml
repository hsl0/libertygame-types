# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Bump NPM version

on:
  workflow_dispatch:
    inputs:
      versionType:
        description: 'Version Type'
        type: choice
        required: true
        default: 'minor'
        options:
          - major
          - minor
          - patch
      commitMessage:
        description: 'Commit Message'
        required: false
        default: 'Release version %s'

jobs:
  test:
    uses: ./.github/workflows/node.js.yml

  bump:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Preparing git repositry
        run: |
          git config --global user.name "$USER_NAME"
          git config --global user.email "$USER_EMAIL"
        env:
          USER_NAME: gitHub-actions[bot]
          USER_EMAIL: github-actions[bot]@users.noreply.github.com
      - name: Preparing package
        run: |
          npm ci
          npm audit
      - name: Bumping npm version
        run: npm version $VERSION_TYPE -m "$COMMIT_MSG"
        env:
          VERSION_TYPE: ${{ inputs.versionType }}
          COMMIT_MSG: ${{ inputs.commitMessage }}
      - name: Push to GitHub
        run: |
          git push
          git push --tags

  pr:
    if: ${{ github.event.repository.default_branch != github.ref }}
    needs: bump
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: git log HEAD~1..HEAD
      - run: git log $ORIGIN_MAIN~1..$ORIGIN_MAIN
        env:
          ORIGIN_MAIN: origin/${{ github.event.repository.default_branch }}
      - run: git log $ORIGIN_MAIN...HEAD
        env:
          ORIGIN_MAIN: origin/${{ github.event.repository.default_branch }}
      - run: gh pr create --head HEAD --fill-verbose
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
